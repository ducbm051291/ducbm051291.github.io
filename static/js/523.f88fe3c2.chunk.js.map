{"version":3,"file":"static/js/523.f88fe3c2.chunk.js","mappings":"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","sources":["shared/content/Content.tsx","shared/project-card-footer/ProjectCardFooter.tsx","shared/tags/Tags.tsx","utils/Functions.ts","../node_modules/@chakra-ui/media-query/dist/chakra-ui-media-query.esm.js"],"sourcesContent":["import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"4\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'â€£ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, Flex, IconButton, useBreakpointValue } from \"@chakra-ui/react\";\n\nimport { ArrowRightIcon, GitHubIcon, LinkIcon, AppstoreIcon } from \"utils/Icons\";\nimport { open } from \"utils/Functions\";\n\ninterface GitHubButtonProps {\n    github?: string;\n    display?: any;\n}\n\ninterface ReadMoreProps {\n    readMore?: string;\n}\n\ninterface LiveDemoProps {\n    demo?: string;\n    display?: any;\n}\n\ninterface Props extends GitHubButtonProps, ReadMoreProps, LiveDemoProps {}\n\nexport const ReadMore: FC<ReadMoreProps> = ({ readMore }) => {\n    return readMore ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-offset=\"200\"\n            variant=\"link\"\n            colorScheme=\"black\"\n            rightIcon={<ArrowRightIcon fontSize=\"16pt\" />}\n            onClick={() => open(readMore)}\n        >\n            Read More\n        </Button>\n    ) : null;\n};\n\nexport const GitHubButton: FC<GitHubButtonProps> = ({ github, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return github ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-delay=\"400\"\n            as={as}\n            variant=\"secondary\"\n            py=\"5\"\n            display={display}\n            leftIcon={<GitHubIcon />}\n            icon={<GitHubIcon />}\n            onClick={() => open(github)}\n        >\n            GitHub\n        </Button>\n    ) : null;\n};\n\nexport const LiveDemo: FC<LiveDemoProps> = ({ demo, display }) => {\n    const as = useBreakpointValue({ base: IconButton, lg: Button });\n\n    return demo ? (\n        <Button\n            data-aos=\"fade\"\n            data-aos-delay=\"200\"\n            as={as}\n            display={display}\n            leftIcon={<AppstoreIcon fontSize=\"14pt\" />}\n            icon={<AppstoreIcon fontSize=\"14pt\" />}\n            onClick={() => open(demo)}\n            backgroundColor=\"black\"\n        >\n            Appstore\n        </Button>\n    ) : null;\n};\n\nexport const ProjectCardFooter: FC<Props> = ({ readMore, github, demo }) => {\n    return (\n        <Flex justifyContent={readMore ? \"space-between\" : \"flex-end\"} alignItems=\"center\" pt=\"8\">\n            <ReadMore readMore={readMore} />\n            <Flex gap=\"4\" justifyContent=\"space-between\" alignItems=\"center\" display={demo || github ? \"flex\" : \"none\"}>\n                <LiveDemo demo={demo} />\n                <GitHubButton github={github} />\n            </Flex>\n        </Flex>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Flex, Box, Badge } from \"@chakra-ui/react\";\n\ninterface Props {\n    id: string;\n    tags: Array<string>;\n    size?: string;\n    delay?: number;\n}\n\nexport const Tags: FC<Props> = ({ id, tags, size = \"sm\" }) => {\n    return (\n        <Flex py=\"2\" wrap=\"wrap\" gap=\"4\">\n            {tags.map((tag, idx) => (\n                <Box data-aos=\"flip-left\" data-aos-delay={idx * 50} key={`${id}-tag-${tag}`}>\n                    <Badge\n                        transition=\"0.2s ease-in-out\"\n                        transitionProperty=\"background, color\"\n                        _hover={{ color: \"white\", bg: \"primary.500\" }}\n                        textTransform=\"none\"\n                        colorScheme=\"gray\"\n                        borderRadius=\"md\"\n                        px=\"8px\"\n                        py=\"4px\"\n                        fontSize={size}\n                        fontWeight=\"600\"\n                    >\n                        {tag}\n                    </Badge>\n                </Box>\n            ))}\n        </Flex>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n","import { useTheme } from '@chakra-ui/system';\nimport { isBrowser, __DEV__, memoizedGet, isNumber, breakpoints, isArray, fromEntries, arrayToObjectNotation } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport React__default from 'react';\nimport { useEnvironment } from '@chakra-ui/react-env';\n\nvar useSafeLayoutEffect = isBrowser ? React.useLayoutEffect : React.useEffect;\n/**\n * React hook that tracks state of a CSS media query\n *\n * @param query the media query to match\n */\n\nfunction useMediaQuery(query) {\n  var env = useEnvironment();\n  var queries = Array.isArray(query) ? query : [query];\n  var isSupported = isBrowser && \"matchMedia\" in env.window;\n\n  var _React$useState = React.useState(queries.map(function (query) {\n    return isSupported ? !!env.window.matchMedia(query).matches : false;\n  })),\n      matches = _React$useState[0],\n      setMatches = _React$useState[1]; // Specifying matches in the dependency list will cause the event listeners\n  // to unload and then load each time the dependency changes. This causes\n  // Media Query Events to be missed. The event listeners should only be unloaded\n  // when the component unloads.\n\n\n  useSafeLayoutEffect(function () {\n    if (!isSupported) return undefined;\n    var mediaQueryList = queries.map(function (query) {\n      return env.window.matchMedia(query);\n    });\n    var listenerList = mediaQueryList.map(function (_, index) {\n      var listener = function listener(mqlEvent) {\n        var queryIndex = mediaQueryList.findIndex(function (mediaQuery) {\n          return mediaQuery.media === mqlEvent.media;\n        }); // As the event listener is on the media query list, any time the\n        // listener is called, we know there is a change. There's no need\n        // to compare the previous matches with current. Using\n        // setMatches(matches => {...}) provides access to the current matches\n        // state.  Trying to access matches outside the setMatches function\n        // would provide data from the the time of instantiation (stale).\n\n        setMatches(function (matches) {\n          var currentMatches = matches.map(function (x) {\n            return x;\n          });\n          currentMatches[queryIndex] = mqlEvent.matches;\n          return currentMatches;\n        });\n      }; // Listening to the 'change' event on the Media Query List Object\n      // is more performant as the callback is only invoked when a specified\n      // media query is matched. Using addEventListener on the window object\n      // to listen for the resize event will call the callback on every\n      // viewport resize.\n\n\n      if (typeof mediaQueryList[index].addEventListener === \"function\") {\n        mediaQueryList[index].addEventListener(\"change\", listener);\n      } else {\n        mediaQueryList[index].addListener(listener);\n      }\n\n      return listener;\n    });\n    return function () {\n      mediaQueryList.forEach(function (_, index) {\n        if (typeof mediaQueryList[index].removeEventListener === \"function\") {\n          mediaQueryList[index].removeEventListener(\"change\", listenerList[index]);\n        } else {\n          mediaQueryList[index].removeListener(listenerList[index]);\n        }\n      });\n    };\n  }, []);\n  return matches;\n}\n\n/**\n * Visibility\n *\n * React component to control the visibility of its\n * children based on the current breakpoint\n */\nvar Visibility = function Visibility(props) {\n  var breakpoint = props.breakpoint,\n      hide = props.hide,\n      children = props.children;\n\n  var _useMediaQuery = useMediaQuery(breakpoint),\n      show = _useMediaQuery[0];\n\n  var isVisible = hide ? !show : show;\n  var rendered = isVisible ? children : null;\n  return rendered;\n};\n\nvar Hide = function Hide(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query,\n    hide: true\n  }, children);\n};\n\nif (__DEV__) {\n  Hide.displayName = \"Hide\";\n}\n\nvar Show = function Show(props) {\n  var children = props.children;\n  var query = useQuery(props);\n  return /*#__PURE__*/React.createElement(Visibility, {\n    breakpoint: query\n  }, children);\n};\n\nif (__DEV__) {\n  Show.displayName = \"Show\";\n}\n\nvar getBreakpoint = function getBreakpoint(theme, value) {\n  return memoizedGet(theme, \"breakpoints.\" + value, value);\n};\n\nfunction useQuery(props) {\n  var _props$breakpoint = props.breakpoint,\n      breakpoint = _props$breakpoint === void 0 ? \"\" : _props$breakpoint,\n      below = props.below,\n      above = props.above;\n  var theme = useTheme();\n  var bpBelow = getBreakpoint(theme, below);\n  var bpAbove = getBreakpoint(theme, above);\n  var query = breakpoint;\n\n  if (bpBelow) {\n    query = \"(max-width: \" + bpBelow + \")\";\n  } else if (bpAbove) {\n    query = \"(min-width: \" + bpAbove + \")\";\n  }\n\n  return query;\n}\n\n/**\n * React hook used to get the user's animation preference.\n */\n\nfunction usePrefersReducedMotion() {\n  var _useMediaQuery = useMediaQuery(\"(prefers-reduced-motion: reduce)\"),\n      prefersReducedMotion = _useMediaQuery[0];\n\n  return prefersReducedMotion;\n}\n/**\n * React hook for getting the user's color mode preference.\n */\n\nfunction useColorModePreference() {\n  var _useMediaQuery2 = useMediaQuery([\"(prefers-color-scheme: light)\", \"(prefers-color-scheme: dark)\"]),\n      isLight = _useMediaQuery2[0],\n      isDark = _useMediaQuery2[1];\n\n  if (isLight) return \"light\";\n  if (isDark) return \"dark\";\n  return undefined;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction createMediaQueries(breakpoints) {\n  return Object.entries(breakpoints) // sort css units in ascending order to ensure media queries are generated\n  // in the correct order and reference to each other correctly aswell\n  .sort(function (a, b) {\n    return Number.parseInt(a[1], 10) > Number.parseInt(b[1], 10) ? 1 : -1;\n  }).map(function (_ref, index, arr) {\n    var breakpoint = _ref[0],\n        minWidth = _ref[1];\n    // given a following breakpoint\n    var next = arr[index + 1]; // this breakpoint must end prior the threshold of the next\n\n    var maxWidth = next ? next[1] : undefined;\n    var query = createMediaQueryString(minWidth, maxWidth);\n    return {\n      minWidth: minWidth,\n      maxWidth: maxWidth,\n      breakpoint: breakpoint,\n      query: query\n    };\n  });\n}\n/**\n * Create a media query string from the breakpoints,\n * using a combination of `min-width` and `max-width`.\n */\n\nfunction createMediaQueryString(minWidth, maxWidth) {\n  var hasMinWidth = parseInt(minWidth, 10) >= 0;\n\n  if (!hasMinWidth && !maxWidth) {\n    return \"\";\n  }\n\n  var query = \"(min-width: \" + toMediaString(minWidth) + \")\";\n\n  if (!maxWidth) {\n    return query;\n  }\n\n  if (query) {\n    query += \" and \";\n  }\n\n  query += \"(max-width: \" + toMediaString(subtract(maxWidth)) + \")\";\n  return query;\n}\n\nvar measurementRegex = /([0-9]+\\.?[0-9]*)/;\n\nvar calculateMeasurement = function calculateMeasurement(value, modifier) {\n  if (typeof value === \"number\") {\n    return \"\" + (value + modifier);\n  }\n\n  return value.replace(measurementRegex, function (match) {\n    return \"\" + (parseFloat(match) + modifier);\n  });\n};\n/**\n * 0.01 and 0.1 are too small of a difference for `px` breakpoint values\n *\n * @see https://github.com/chakra-ui/chakra-ui/issues/2188#issuecomment-712774785\n */\n\n\nfunction subtract(value) {\n  return calculateMeasurement(value, value.endsWith(\"px\") ? -1 : -0.01);\n}\n/**\n * Convert media query value to string\n */\n\n\nfunction toMediaString(value) {\n  return isNumber(value) ? value + \"px\" : value;\n}\n\nvar _excluded = [\"query\"],\n    _excluded2 = [\"query\"],\n    _excluded3 = [\"query\"];\n\n/**\n * React hook used to get the current responsive media breakpoint.\n *\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n */\nfunction useBreakpoint(defaultBreakpoint) {\n  var _useTheme = useTheme(),\n      breakpoints = _useTheme.breakpoints;\n\n  var env = useEnvironment();\n  var mediaQueries = React__default.useMemo(function () {\n    return createMediaQueries(_extends({\n      base: \"0px\"\n    }, breakpoints));\n  }, [breakpoints]);\n\n  var _React$useState = React__default.useState(function () {\n    if (env.window.matchMedia) {\n      var maxBreakpoint;\n      mediaQueries.forEach(function (_ref) {\n        var query = _ref.query,\n            breakpoint = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n        var mediaQuery = env.window.matchMedia(query);\n\n        if (mediaQuery.matches) {\n          maxBreakpoint = breakpoint;\n        }\n      });\n\n      if (maxBreakpoint) {\n        return maxBreakpoint;\n      }\n    }\n\n    if (!defaultBreakpoint) {\n      return undefined;\n    }\n\n    var mediaQuery = mediaQueries.find(function (_ref2) {\n      var breakpoint = _ref2.breakpoint;\n      return breakpoint === defaultBreakpoint;\n    });\n\n    if (mediaQuery) {\n      mediaQuery.query;\n          var breakpoint = _objectWithoutPropertiesLoose(mediaQuery, _excluded2);\n\n      return breakpoint;\n    }\n\n    return undefined;\n  }),\n      currentBreakpoint = _React$useState[0],\n      setCurrentBreakpoint = _React$useState[1];\n\n  var current = currentBreakpoint == null ? void 0 : currentBreakpoint.breakpoint;\n  var update = React__default.useCallback(function (query, breakpoint) {\n    if (query.matches && current !== breakpoint.breakpoint) {\n      setCurrentBreakpoint(breakpoint);\n    }\n  }, [current]);\n  React__default.useEffect(function () {\n    var listeners = new Set();\n    mediaQueries.forEach(function (_ref3) {\n      var query = _ref3.query,\n          breakpoint = _objectWithoutPropertiesLoose(_ref3, _excluded3);\n\n      var mediaQuery = env.window.matchMedia(query); // trigger an initial update to determine media query\n\n      update(mediaQuery, breakpoint);\n\n      var handleChange = function handleChange() {\n        update(mediaQuery, breakpoint);\n      }; // add media query-listener\n\n\n      mediaQuery.addListener(handleChange); // push the media query list handleChange\n      // so we can use it to remove Listener\n\n      listeners.add({\n        mediaQuery: mediaQuery,\n        handleChange: handleChange\n      });\n      return function () {\n        // clean up 1\n        mediaQuery.removeListener(handleChange);\n      };\n    });\n    return function () {\n      // clean up 2: for safety\n      listeners.forEach(function (_ref4) {\n        var mediaQuery = _ref4.mediaQuery,\n            handleChange = _ref4.handleChange;\n        mediaQuery.removeListener(handleChange);\n      });\n      listeners.clear();\n    };\n  }, [mediaQueries, breakpoints, update, env.window]);\n  return current;\n}\n\nfunction getClosestValue(values, breakpoint, breakpoints$1) {\n  if (breakpoints$1 === void 0) {\n    breakpoints$1 = breakpoints;\n  }\n\n  var index = Object.keys(values).indexOf(breakpoint);\n\n  if (index !== -1) {\n    return values[breakpoint];\n  }\n\n  var stopIndex = breakpoints$1.indexOf(breakpoint);\n\n  while (stopIndex >= 0) {\n    var key = breakpoints$1[stopIndex];\n\n    if (values[key] != null) {\n      index = stopIndex;\n      break;\n    }\n\n    stopIndex -= 1;\n  }\n\n  if (index !== -1) {\n    var _key = breakpoints$1[index];\n    return values[_key];\n  }\n\n  return undefined;\n}\n\n/**\n * React hook for getting the value for the current breakpoint from the\n * provided responsive values object.\n *\n * @param values\n * @param defaultBreakpoint default breakpoint name\n * (in non-window environments like SSR)\n *\n * For SSR, you can use a package like [is-mobile](https://github.com/kaimallea/isMobile)\n * to get the default breakpoint value from the user-agent\n *\n * @example\n * const width = useBreakpointValue({ base: '150px', md: '250px' })\n */\n\nfunction useBreakpointValue(values, defaultBreakpoint) {\n  var breakpoint = useBreakpoint(defaultBreakpoint);\n  var theme = useTheme();\n  if (!breakpoint) return undefined;\n  /**\n   * Get the non-number breakpoint keys from the provided breakpoints\n   */\n\n  var breakpoints = Object.keys(theme.breakpoints);\n  var obj = isArray(values) ? fromEntries(Object.entries(arrayToObjectNotation(values, breakpoints)).map(function (_ref) {\n    var key = _ref[0],\n        value = _ref[1];\n    return [key, value];\n  })) : values;\n  return getClosestValue(obj, breakpoint, breakpoints);\n}\n\nexport { Hide, Show, useBreakpoint, useBreakpointValue, useColorModePreference, useMediaQuery, usePrefersReducedMotion, useQuery };\n"],"names":["MarkdownFile","configs","common","landing","featuredProjects","otherProjects","about","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","useState","data","setData","useEffect","fetch","then","res","text","Content","children","rest","spacing","components","p","node","props","a","href","target","color","ul","ordered","listStylePosition","display","gridTemplateColumns","listStyleType","fontWeight","li","index","ReadMore","readMore","variant","colorScheme","rightIcon","fontSize","onClick","open","GitHubButton","github","as","useBreakpointValue","base","IconButton","lg","Button","py","leftIcon","icon","LiveDemo","demo","backgroundColor","ProjectCardFooter","justifyContent","alignItems","pt","gap","Tags","id","tags","size","wrap","map","tag","idx","transition","transitionProperty","_hover","bg","textTransform","borderRadius","px","link","window","onResumeOpen","onMailTo","isBrowser","React","__DEV__","_objectWithoutPropertiesLoose","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","createMediaQueries","breakpoints","entries","sort","b","Number","parseInt","_ref","arr","breakpoint","minWidth","next","maxWidth","undefined","query","toMediaString","value","modifier","replace","measurementRegex","match","parseFloat","calculateMeasurement","endsWith","subtract","createMediaQueryString","isNumber","_excluded","_excluded2","_excluded3","values","defaultBreakpoint","useTheme","env","useEnvironment","mediaQueries","React__default","_React$useState","maxBreakpoint","matchMedia","forEach","matches","mediaQuery","find","_ref2","currentBreakpoint","setCurrentBreakpoint","current","update","listeners","Set","_ref3","handleChange","addListener","add","removeListener","_ref4","clear","useBreakpoint","theme","breakpoints$1","stopIndex","getClosestValue","isArray","fromEntries","arrayToObjectNotation"],"sourceRoot":""}